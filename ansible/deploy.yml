- name: Deploy web servers
  hosts: webservers
  remote_user: ec2-user
  vars_prompt:
  - name: secret_key
    prompt: Enter secret key for flask session feature
    private: true
  - name: trello_api_key
    prompt: Enter a trello api key generated using the steps documented in "Populating TRELLO_ Environment Variables" in the README  
    private: true
  - name: trello_api_token
    prompt: Enter a trello api token generated using the steps documented in "Populating TRELLO_ Environment Variables" in the README  
    private: true
  - name: trello_board_id
    prompt: Enter a trello board id found using the steps documented in "Populating TRELLO_ Environment Variables" in the README
  - name: trello_todo_list_id
    prompt: Enter a trello list id to use for to do items found using the steps documented in "Populating TRELLO_ Environment Variables" in the README
  - name: trello_done_list_id
    prompt: Enter a trello list id to use for done items found using the steps documented in "Populating TRELLO_ Environment Variables" in the README
  tasks:
    - name: Install git and python3
      become: true
      ansible.builtin.dnf:
        name: 
          - git
          - python3
        state: present
    
    - name: Install poetry
      ansible.builtin.shell:
        cmd: curl -sSL https://install.python-poetry.org | python3 -
        creates: ~/.local/bin/poetry
    
    - name: Create /opt/todoapp if it does not exit
      become: true
      ansible.builtin.file:
        path: /opt/todoapp
        state: directory
        owner: ec2-user
    
    - name: Clone git repo
      ansible.builtin.git:
        repo: 'https://github.com/alacho22/DevOps-Course-Starter'
        dest: /opt/todoapp
        version: exercise-4

    - name: Install dependencies with poetry
      command:
        cmd: ~/.local/bin/poetry install
        chdir: /opt/todoapp

    - name: Copy over .env with template values
      ansible.builtin.template:
        src: templates/.env.j2
        dest: /opt/todoapp/.env
        owner: ec2-user
        mode: u=rw,g=r,o=r

    - name: Copy todoapp service file
      become: true
      ansible.builtin.copy:
        src: etc/systemd/system/todoapp.service
        dest: /etc/systemd/system/todoapp.service

    - name: Restart the todoapp service
      become: true
      ansible.builtin.systemd_service:
        name: todoapp
        daemon_reload: true
        state: restarted